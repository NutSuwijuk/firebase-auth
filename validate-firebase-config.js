#!/usr/bin/env node

/**
 * Firebase Config Validator
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase config ‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Firebase Config Validator');
console.log('============================\n');

// Check if index.html exists
const indexPath = path.join(__dirname, 'index.html');
if (!fs.existsSync(indexPath)) {
    console.error('‚ùå index.html not found');
    process.exit(1);
}

// Read index.html
const htmlContent = fs.readFileSync(indexPath, 'utf8');

// Extract Firebase config
const firebaseConfigMatch = htmlContent.match(/const firebaseConfig = \{[\s\S]*?\};/);
if (!firebaseConfigMatch) {
    console.error('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Firebase config ‡πÉ‡∏ô index.html');
    process.exit(1);
}

const configText = firebaseConfigMatch[0];
console.log('üìã ‡∏û‡∏ö Firebase config:');
console.log(configText);
console.log('');

// Check for placeholder values
const placeholderPatterns = [
    { pattern: /AIzaSyBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX/, name: 'API Key (placeholder)' },
    { pattern: /123456789012/, name: 'Messaging Sender ID (placeholder)' },
    { pattern: /abcdefghijklmnop/, name: 'App ID (placeholder)' }
];

let hasPlaceholders = false;
console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö placeholder values:');

placeholderPatterns.forEach(({ pattern, name }) => {
    if (pattern.test(configText)) {
        console.log(`‚ùå ${name} - ‡∏û‡∏ö placeholder value`);
        hasPlaceholders = true;
    } else {
        console.log(`‚úÖ ${name} - ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á`);
    }
});

// Check for valid patterns
console.log('\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•:');

// API Key pattern (should start with AIzaSy and be 39 characters)
const apiKeyMatch = configText.match(/apiKey:\s*"([^"]+)"/);
if (apiKeyMatch) {
    const apiKey = apiKeyMatch[1];
    if (apiKey.startsWith('AIzaSy') && apiKey.length === 39) {
        console.log('‚úÖ API Key - ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    } else {
        console.log('‚ùå API Key - ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á (‡∏Ñ‡∏ß‡∏£‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ AIzaSy ‡πÅ‡∏•‡∏∞‡∏¢‡∏≤‡∏ß 39 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£)');
        hasPlaceholders = true;
    }
}

// Project ID pattern
const projectIdMatch = configText.match(/projectId:\s*"([^"]+)"/);
if (projectIdMatch) {
    const projectId = projectIdMatch[1];
    if (projectId.includes('your-project') || projectId.includes('basic-firebase')) {
        console.log('‚ö†Ô∏è  Project ID - ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô placeholder');
        hasPlaceholders = true;
    } else {
        console.log('‚úÖ Project ID - ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á');
    }
}

// Auth Domain pattern
const authDomainMatch = configText.match(/authDomain:\s*"([^"]+)"/);
if (authDomainMatch) {
    const authDomain = authDomainMatch[1];
    if (authDomain.includes('your-project') || authDomain.includes('basic-firebase')) {
        console.log('‚ö†Ô∏è  Auth Domain - ‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô placeholder');
        hasPlaceholders = true;
    } else {
        console.log('‚úÖ Auth Domain - ‡∏î‡∏π‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á');
    }
}

// Summary
console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
console.log('==================');

if (hasPlaceholders) {
    console.log('‚ùå ‡∏û‡∏ö‡∏õ‡∏±‡∏ç‡∏´‡∏≤:');
    console.log('   - Firebase config ‡∏¢‡∏±‡∏á‡πÉ‡∏ä‡πâ placeholder values');
    console.log('   - ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Firebase Console');
    console.log('');
    console.log('üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
    console.log('   1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Firebase Console > Project Settings > General');
    console.log('   2. ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å Firebase config ‡∏à‡∏≤‡∏Å Web app');
    console.log('   3. ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡πÉ‡∏ô index.html');
    console.log('   4. ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Authentication > Sign-in method > Google');
    console.log('');
    console.log('üìñ ‡∏î‡∏π‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô: FIREBASE_CONFIG_SETUP.md');
} else {
    console.log('‚úÖ Firebase config ‡∏î‡∏π‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    console.log('üìù ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Firebase Console:');
    console.log('   - Authentication > Sign-in method > Google (‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)');
    console.log('   - Authentication > Settings > Authorized domains');
    console.log('');
    console.log('üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡πÄ‡∏õ‡∏¥‡∏î index.html ‡πÅ‡∏•‡∏∞‡∏•‡∏≠‡∏á‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏° Google login');
}

console.log('\nüí° ‡πÄ‡∏Ñ‡∏•‡πá‡∏î‡∏•‡∏±‡∏ö:');
console.log('- API Key ‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡∏ï‡πâ‡∏ô‡∏î‡πâ‡∏ß‡∏¢ "AIzaSy"');
console.log('- Project ID ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÉ‡∏ô Firebase Console');
console.log('- Auth Domain ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô "your-project-id.firebaseapp.com"');
console.log('- ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Authentication ‡πÉ‡∏ô Firebase Console'); 