#!/usr/bin/env node

/**
 * Firebase Setup Checker
 * ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Firebase ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Google ‡πÅ‡∏•‡∏∞ Apple login
 */

const fs = require('fs');
const path = require('path');

console.log('üîç Firebase Setup Checker');
console.log('========================\n');

// Check if index.html exists
const indexPath = path.join(__dirname, 'index.html');
if (!fs.existsSync(indexPath)) {
    console.error('‚ùå index.html not found');
    process.exit(1);
}

// Read index.html
const htmlContent = fs.readFileSync(indexPath, 'utf8');

// Check Firebase config
console.log('1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Configuration...');
const firebaseConfigMatch = htmlContent.match(/const firebaseConfig = \{[\s\S]*?\};/);
if (firebaseConfigMatch) {
    const config = firebaseConfigMatch[0];
    
    // Check for placeholder values
    const hasPlaceholders = config.includes('AIzaSyBXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX') || 
                           config.includes('123456789012') ||
                           config.includes('abcdefghijklmnop');
    
    if (hasPlaceholders) {
        console.log('‚ö†Ô∏è  ‡∏û‡∏ö placeholder values ‡πÉ‡∏ô Firebase config');
        console.log('   ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤ Firebase config ‡∏à‡∏£‡∏¥‡∏á‡∏à‡∏≤‡∏Å Firebase Console');
        console.log('   ‡πÑ‡∏õ‡∏ó‡∏µ‡πà: Project Settings > General > Your apps');
    } else {
        console.log('‚úÖ Firebase config ‡∏î‡∏π‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
    }
} else {
    console.log('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Firebase config ‡πÉ‡∏ô index.html');
}

// Check for required imports
console.log('\n2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Firebase Imports...');
const requiredImports = [
    'GoogleAuthProvider',
    'OAuthProvider',
    'signInWithPopup'
];

let allImportsFound = true;
requiredImports.forEach(importName => {
    if (htmlContent.includes(importName)) {
        console.log(`‚úÖ ${importName} - ‡∏û‡∏ö`);
    } else {
        console.log(`‚ùå ${importName} - ‡πÑ‡∏°‡πà‡∏û‡∏ö`);
        allImportsFound = false;
    }
});

// Check for event listeners
console.log('\n3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Event Listeners...');
const eventListeners = [
    'googleLoginBtn',
    'appleLoginBtn'
];

eventListeners.forEach(btnId => {
    if (htmlContent.includes(btnId)) {
        console.log(`‚úÖ ${btnId} - ‡∏û‡∏ö`);
    } else {
        console.log(`‚ùå ${btnId} - ‡πÑ‡∏°‡πà‡∏û‡∏ö`);
    }
});

// Check for providers initialization
console.log('\n4. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Provider Initialization...');
if (htmlContent.includes('new GoogleAuthProvider()')) {
    console.log('‚úÖ GoogleAuthProvider - ‡∏ñ‡∏π‡∏Å initialize');
} else {
    console.log('‚ùå GoogleAuthProvider - ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å initialize');
}

if (htmlContent.includes('new OAuthProvider(\'apple.com\')')) {
    console.log('‚úÖ Apple OAuthProvider - ‡∏ñ‡∏π‡∏Å initialize');
} else {
    console.log('‚ùå Apple OAuthProvider - ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å initialize');
}

// Summary
console.log('\nüìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:');
console.log('========================');

if (hasPlaceholders) {
    console.log('‚ö†Ô∏è  ‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç:');
    console.log('   1. ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà Firebase config ‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡πà‡∏≤‡∏à‡∏£‡∏¥‡∏á');
    console.log('   2. ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô Google ‡πÅ‡∏•‡∏∞ Apple providers ‡πÉ‡∏ô Firebase Console');
    console.log('   3. ‡πÄ‡∏û‡∏¥‡πà‡∏° authorized domains');
} else if (allImportsFound) {
    console.log('‚úÖ ‡πÇ‡∏Ñ‡πâ‡∏î‡∏î‡∏π‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô');
    console.log('üìù ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏ô Firebase Console:');
    console.log('   - Authentication > Sign-in method > Google (‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)');
    console.log('   - Authentication > Sign-in method > Apple (‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô)');
    console.log('   - Authentication > Settings > Authorized domains');
} else {
    console.log('‚ùå ‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÉ‡∏ô‡πÇ‡∏Ñ‡πâ‡∏î');
}

console.log('\nüìñ ‡∏î‡∏π‡∏Ñ‡∏π‡πà‡∏°‡∏∑‡∏≠‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô: FIREBASE_SETUP_GUIDE.md'); 